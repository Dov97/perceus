[pylama]
# D203 : Skips the need for one blank line before class docstrings.
# C0114: Skips the need for docstrings in public modules.
# C0115: Skips the need for docstrings in public classes.
# C0116: Skips the need for docstrings in public functions.
# R0903: Skips the need for at least three methods in classes.
# W1203: Allows use of .format() instead of f-strings.
# W1309: Allows complex expressions in f-string formatting.
ignore = D203,C0114,C0115,C0116,R0903,W1203,W1309

# pycodestyle: Check code follows Python's official style guide.
# pyflakes   : Check for basic errors and issues.
# pylint     : Check for errors, style issues, and suggests improvements.
# radon      : Check code complexity.
# pydocstyle : Check documentation follows conventions - handled in run.sh
#              as a bug work around.
linters = pycodestyle,pyflakes,pylint,radon

max_line_length = 120

[pylama:pylint]
# R0801: Similar lines in X files
# W0212: Access to a protected member _name of a client class
# C0411: Wrong import order
# R0903: Too few public methods
# C0103: Doesn't conform to snake_case
# W0622: Redefining built-in
# W0105: String statement has no effect
# W0718: Catching too general exception Exception
disable = R0801,W0212,C0411,R0903,C0103,W0622,W0105,W0718

[pylama:radon]
# mi_visit: Calculates code maintainability.
# mi_rank : Gives a rank to code maintainability.
# show_mi : Shows the maintainability index.
# cc_visit: Calculates code complexity.
# cc_rank : Gives a rank to code complexity.
mi_visit = True
mi_rank = True
show_mi = True
cc_visit = True
cc_rank = True
